// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id      String  @id @default(cuid())
  clerkId String
  email   String  @unique
  name    String?

  //relationships
  createdAt  DateTime     @default(now())
  EmailBlast EmailBlast[]
}

model MailingList {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())

  //relationships
  Recipient  Recipient[]
  EmailBlast EmailBlast[]
}

model Message {
  id          String   @id @default(cuid())
  content     String
  isDelivered Boolean
  sentTime    DateTime

  //relationships
  Recipient    Recipient[]
  emailBlastId String?
  EmailBlast   EmailBlast? @relation(fields: [emailBlastId], references: [id])
}

model Recipient {
  id    String @id @default(cuid())
  name  String
  email String

  //relationships
  lists            MailingList @relation(fields: [mailingListId], references: [id])
  mailingListId    String
  receivedMessages Message     @relation(fields: [messageId], references: [id])
  messageId        String
}

model EmailBlast {
  id   String @id @default(cuid())
  name String

  //relationships
  author        AdminUser   @relation(fields: [adminUserId], references: [id])
  adminUserId   String
  targetList    MailingList @relation(fields: [mailingListId], references: [id])
  mailingListId String
  messagesSent  Message[]
}
